An error occurred while executing the following cell:
------------------
plt.figure()
plot_lr_vs_loss(rates, losses)
save_fig("lrfinder-raw.pdf")
plt.show()

# https://sites.google.com/site/hardwaremonkey/blog/ewmafilterexmpleusingpandasandpython
# x = np.linspace(0, 2 * np.pi, 100)
# y = 2 * np.sin(x) + 0.1 * np.random.normal(x)
x = rates
y = np.array(losses, dtype=np.float64)
df = pd.Series(y)
filtered = pd.Series.ewm(df, span=10).mean()
plt.figure()  # figsize=(10,6))
plt.plot(x, y)
# plt.plot(x, filtered)
plt.gca().set_xscale("log")
plt.xlabel("Learning rate")
plt.ylabel("Loss")
save_fig("lrfinder-unfiltered.pdf")
plt.show()

plt.figure()  # figsize=(10,6))
# plt.plot(x, y)
plt.plot(x, filtered)
plt.gca().set_xscale("log")
plt.xlabel("Learning rate")
plt.ylabel("Loss")
save_fig("lrfinder-filtered.pdf")
plt.show()

plt.figure()  # figsize=(10,6))
plt.plot(x, y)
plt.plot(x, filtered)
plt.gca().set_xscale("log")
plt.xlabel("Learning rate")
plt.ylabel("Loss")
save_fig("lrfinder-filtered-both.pdf")
plt.show()
------------------

---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
/tmp/ipykernel_6037/302482964.py in <module>
      1 plt.figure()
----> 2 plot_lr_vs_loss(rates, losses)
      3 save_fig("lrfinder-raw.pdf")
      4 plt.show()
      5 

/tmp/ipykernel_6037/118368236.py in plot_lr_vs_loss(rates, losses)
     28     plt.gca().set_xscale("log")
     29     plt.hlines(min(losses), min(rates), max(rates))
---> 30     plt.axis([min(rates), max(rates), min(losses), (losses[0] + min(losses)) / 2])
     31     plt.xlabel("Learning rate")
     32     plt.ylabel("Loss")

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/pyplot.py in axis(emit, *args, **kwargs)
   2369 @_copy_docstring_and_deprecators(Axes.axis)
   2370 def axis(*args, emit=True, **kwargs):
-> 2371     return gca().axis(*args, emit=emit, **kwargs)
   2372 
   2373 

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/axes/_base.py in axis(self, emit, *args, **kwargs)
   2095                      else False)
   2096             self.set_xlim(xmin, xmax, emit=emit, auto=xauto)
-> 2097             self.set_ylim(ymin, ymax, emit=emit, auto=yauto)
   2098         if kwargs:
   2099             raise TypeError(f"axis() got an unexpected keyword argument "

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/axes/_base.py in set_ylim(self, bottom, top, emit, auto, ymin, ymax)
   4025 
   4026         self._process_unit_info([("y", (bottom, top))], convert=False)
-> 4027         bottom = self._validate_converted_limits(bottom, self.convert_yunits)
   4028         top = self._validate_converted_limits(top, self.convert_yunits)
   4029 

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/axes/_base.py in _validate_converted_limits(self, limit, convert)
   3612             if (isinstance(converted_limit, Real)
   3613                     and not np.isfinite(converted_limit)):
-> 3614                 raise ValueError("Axis limits cannot be NaN or Inf")
   3615             return converted_limit
   3616 

ValueError: Axis limits cannot be NaN or Inf
ValueError: Axis limits cannot be NaN or Inf
